<!doctype html>
<html lang="en" data-bs-theme="auto">

<head>
  <script src="../assets/js/color-modes.js"></script>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Simulador do Caos</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@docsearch/css@3">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

  <style>
    .bd-placeholder-img {
      font-size: 1.125rem;
      text-anchor: middle;
      -webkit-user-select: none;
      -moz-user-select: none;
      user-select: none;
    }

    @media (min-width: 768px) {
      .bd-placeholder-img-lg {
        font-size: 3.5rem;
      }
    }

    .b-example-divider {
      width: 100%;
      height: 3rem;
      background-color: rgba(0, 0, 0, .1);
      border: solid rgba(0, 0, 0, .15);
      border-width: 1px 0;
      box-shadow: inset 0 .5em 1.5em rgba(0, 0, 0, .1), inset 0 .125em .5em rgba(0, 0, 0, .15);
    }

    .b-example-vr {
      flex-shrink: 0;
      width: 1.5rem;
      height: 100vh;
    }

    .bi {
      vertical-align: -.125em;
      fill: currentColor;
    }

    .nav-scroller {
      position: relative;
      z-index: 2;
      height: 2.75rem;
      overflow-y: hidden;
    }

    .nav-scroller .nav {
      display: flex;
      flex-wrap: nowrap;
      padding-bottom: 1rem;
      margin-top: -1px;
      overflow-x: auto;
      text-align: center;
      white-space: nowrap;
      -webkit-overflow-scrolling: touch;
    }

    .btn-bd-primary {
      --bd-violet-bg: #712cf9;
      --bd-violet-rgb: 112.520718, 44.062154, 249.437846;

      --bs-btn-font-weight: 600;
      --bs-btn-color: var(--bs-white);
      --bs-btn-bg: var(--bd-violet-bg);
      --bs-btn-border-color: var(--bd-violet-bg);
      --bs-btn-hover-color: var(--bs-white);
      --bs-btn-hover-bg: #6528e0;
      --bs-btn-hover-border-color: #6528e0;
      --bs-btn-focus-shadow-rgb: var(--bd-violet-rgb);
      --bs-btn-active-color: var(--bs-btn-hover-color);
      --bs-btn-active-bg: #5a23c8;
      --bs-btn-active-border-color: #5a23c8;
    }

    .bd-mode-toggle {
      z-index: 1500;
    }

    .bd-mode-toggle .dropdown-menu .active .bi {
      display: block !important;
    }
  </style>
</head>

<body>
  <header data-bs-theme="dark">
    <div class="navbar navbar-dark bg-dark shadow-sm">
      <div class="container">
        <a href="#" class="navbar-brand d-flex align-items-center">
          <strong>Simulador do Caos</strong>
        </a>
      </div>
    </div>
  </header>
  <main>
    <div id="liveAlertPlaceholder"></div>
    <section class="py-5 text-center container">
      <div class="row py-lg-5">
        <div class="col-lg-12 col-md-12 mx-auto">
          <h1 class="fw-light">Simulador do Caos</h1>
          <p class="lead text-body-secondary">Essa aplicação de exemplo tem como objetivo ser uma demonstração sobre
            tópicos de resiliência e consumo de recursos.</p>
          <p>
            <button type="button" class="btn btn-primary" id="breakAppButton">Quebrar a Aplicação</button>
            <button type="button" class="btn btn-primary" id="unReadyAppButton">Aplicação Indisponível por 60
              segundos</button>
            <button type="button" class="btn btn-primary" id="stressExitOk">Encerrar Aplicação com Sucesso</button>
            <button type="button" class="btn btn-primary" id="stressExitErro">Encerrar Aplicação com Erro</button>
          </p>
          <p>
            <button type="button" class="btn btn-primary" id="stressCPUAppButton">Alto Consumo de CPU</button>
            <button type="button" class="btn btn-primary" id="stressMemoryAppButton">Alto Consumo de Memória</button>
          </p>
        </div>
      </div>
    </section>
  </main>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL"
    crossorigin="anonymous"></script>

  <script>
    const alertPlaceholder = document.getElementById('liveAlertPlaceholder')
    const appendAlert = (message, type) => {
      const wrapper = document.createElement('div')
      wrapper.innerHTML = [
        `<div class="alert alert-${type} alert-dismissible" role="alert">`,
        `   <div>${message}</div>`,
        '   <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>',
        '</div>'
      ].join('')

      alertPlaceholder.append(wrapper)
    }
  </script>

  <script>
    $(document).ready(function () {
      // Evento do botão UNHEALTH
      $('#breakAppButton').click(function (event) {
        event.preventDefault();
        $.ajax({
          url: '/unhealth',
          type: 'PUT',
          success: function (data) {
            appendAlert(data, 'success')
          },
          error: function (error) {
            appendAlert('Erro ao executar o endpoint:', 'danger')
          }
        });
      });

      $('#unReadyAppButton').click(function (event) {
        event.preventDefault();
        $.ajax({
          url: '/unreadfor/60',
          type: 'PUT',
          success: function (data) {
            appendAlert(data, 'success')
          },
          error: function (error) {
            appendAlert('Erro ao executar o endpoint:', 'danger')
          }
        });
      });

      $('#stressCPUAppButton').click(function (event) {
        event.preventDefault();
        $.ajax({
          url: '/stress/cpu',
          type: 'PUT',
          success: function (data) {
            appendAlert(data, 'success')
          },
          error: function (error) {
            appendAlert('Erro ao executar o endpoint:', 'danger')
          }
        });
      });

      $('#stressMemoryAppButton').click(function (event) {
        event.preventDefault();
        $.ajax({
          url: '/stress/memory',
          type: 'PUT',
          success: function (data) {
            appendAlert(data, 'success')
          },
          error: function (error) {
            appendAlert('Erro ao executar o endpoint:', 'danger')
          }
        });
      });

      $('#stressExitOk').click(function (event) {
        event.preventDefault();
        $.ajax({
          url: '/exit/success',
          type: 'PUT',
          success: function (data) {
            appendAlert(data, 'success')
          },
          error: function (error) {
            appendAlert('Erro ao executar o endpoint:', 'danger')
          }
        });
      });

      $('#stressExitErro').click(function (event) {
        event.preventDefault();
        $.ajax({
          url: '/exit/fail',
          type: 'PUT',
          success: function (data) {
            appendAlert(data, 'success')
          },
          error: function (error) {
            appendAlert('Erro ao executar o endpoint:', 'danger')
          }
        });
      });

    });
  </script>
</body>

</html>